{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.tsx","components/ContactForm/ContactForm.tsx","components/ContactListItem/ContactListItem.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Container","children","className","styles","container","initialState","name","number","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","type","pattern","title","required","placeholder","onChange","ContactListItem","id","onDeleteContact","contact","tel","onClick","ContactList","contacts","map","Filter","input","initialContacts","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filteredContacts","includes","normalizedName","find","alert","newContact","shortid","generate","prState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6de54f6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3CcAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1YgHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__AG4FL\"};","// import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\ninterface IContainer {\n  children?: React.ReactNode;\n}\n\nconst Container = ({ children }: IContainer) => (\n  <div className={styles.container}>{children}</div>\n);\n\n// Container.propTypes = {\n//   children: PropTypes.node,\n// };\n\nexport default Container;\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\ninterface IProps {\n  onSubmit: (name: string, number: string) => void;\n}\n\nconst ContactForm = ({ onSubmit }: IProps) => {\n  const [inputValue, setInputValue] = useState(initialState);\n  const { name, number } = inputValue;\n\n  const changeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n    setInputValue({ ...inputValue, [name]: value });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setInputValue(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={changeInput}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n          onChange={changeInput}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nexport default ContactForm;\n","// import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\ninterface IProps {\n  id: string;\n  name: string;\n  number: string;\n  onDeleteContact: (id: string) => void;\n}\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }: IProps) => {\n  return (\n    <li className={styles.contact}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tel}>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\n// ContactListItem.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactListItem;\n","// import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\n\ninterface IContact {\n  id: string;\n  name: string;\n  number: string;\n}\n\ninterface IProps {\n  contacts: IContact[];\n  onDeleteContact: (id: string) => void;\n}\n\nconst ContactList = ({ contacts, onDeleteContact }: IProps) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//     }),\n//   ).isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactList;\n","// import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\ninterface IProps {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nconst Filter = ({ value = '', onChange }: IProps) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\n// Filter.defaultProps = {\n//   value: '',\n// };\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Илья Мирошниченко', number: '+380993533451' },\n  { id: 'id-2', name: 'Илон Маск', number: '+123456789147' },\n  { id: 'id-3', name: 'Марк Цукерберг', number: '+198453489753' },\n  { id: 'id-4', name: 'Александр Репета', number: '+380503533999' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name: string, number: string) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prState => [newContact, ...prState]);\n  };\n\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = (contactId: string) =>\n    setContacts(prState => prState.filter(({ id }) => id !== contactId));\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__2Tei-\",\"name\":\"ContactListItem_name__1JwGO\",\"tel\":\"ContactListItem_tel__CFnIj\"};"],"sourceRoot":""}