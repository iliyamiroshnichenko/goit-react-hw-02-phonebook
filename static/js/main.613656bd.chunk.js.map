{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Container","children","className","styles","container","initialState","name","number","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","reset","type","pattern","title","required","placeholder","onChange","ContactListItem","id","onDeleteContact","contact","tel","onClick","ContactList","contacts","map","Filter","input","defaultProps","initialContacts","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filteredContacts","includes","find","alert","newContact","shortid","generate","prState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.613656bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3CcAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1YgHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__AG4FL\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState(initialState);\n  const { name, number } = inputValue;\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    setInputValue({ ...inputValue, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setInputValue(initialState);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={changeInput}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n          onChange={changeInput}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.contact}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tel}>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\n// import styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Илья Мирошниченко', number: '+380993533451' },\n  { id: 'id-2', name: 'Илон Маск', number: '+123456789147' },\n  { id: 'id-3', name: 'Марк Цукерберг', number: '+198453489753' },\n  { id: 'id-4', name: 'Александр Репета', number: '+380503533999' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prState => [newContact, ...prState]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = contactId =>\n    setContacts(prState => prState.filter(({ id }) => id !== contactId));\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__2Tei-\",\"name\":\"ContactListItem_name__1JwGO\",\"tel\":\"ContactListItem_tel__CFnIj\"};"],"sourceRoot":""}